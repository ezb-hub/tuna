name: Release

on:
  push:
    tags:
      - "*.*.*"

permissions:
  contents: read

jobs:
  build:
    runs-on: self-hosted

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Tag Number
        id: tag
        run: echo ::set-output name=number::${GITHUB_REF/refs\/tags\//}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_REPO }}:${{steps.tag.outputs.number}}

  deploy:
    needs: build
    runs-on: self-hosted

    permissions:
      contents: read
      packages: write

    steps:
      - name: Get Tag Number
        id: tag
        run: echo ::set-output name=number::${GITHUB_REF/refs\/tags\//}

      - name: SSH
        run: |
          ssh -o "StrictHostKeyChecking no" ${{secrets.SERVER_USERNAME}}@${{secrets.SERVER_HOST}} "
            bash ./run.sh;
            docker pull ${{ secrets.DOCKERHUB_REPO }}:${{steps.tag.outputs.number}};
            docker run -d \
              --name strapi \
              --network root_nginx \
              -p 1337:1337 \
              -e DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
              -e DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
              -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e DATABASE_PORT=${{ secrets.DATABASE_PORT }} \
              -e DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} \
              -e APP_ADMIN_JWT_SECRET=${{ secrets.APP_ADMIN_JWT_SECRET }} \
              -e APP_API_TOKEN_SALT=${{ secrets.APP_API_TOKEN_SALT }} \
              -e APP_KEYS=${{ secrets.APP_KEYS }} \
              -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
              -e AWS_ACCESS_SECRET=${{ secrets.AWS_ACCESS_SECRET }} \
              -e AWS_BUCKET=${{ secrets.AWS_BUCKET }} \
              -e AWS_REGION=${{ secrets.AWS_REGION }} \
              ${{ secrets.DOCKERHUB_REPO }}:${{steps.tag.outputs.number}};
          "
